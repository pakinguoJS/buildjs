/**
 * @author
 * @desc
 */
define(function(require, exports, module){
    var $ = require('jquery');
    var IVYAlert = require('ivy.alert');
    var Pagingbar = require('pagingbar');

    // Rewrite goto
    Pagingbar.gotoPage = function(pnum){
        if(pnum > 0 && pnum <= Pagingbar._data.total_page_num){
            Pagingbar.setPageNum(pnum);
            // Set index ui
            $('#common-pagingbar').find('li').removeClass('active');
            $('#common-pagingbar').find('a[data-val="' + pnum + '"]').parent().addClass('active');
            $.get('/cms/index.php/distance/get_more', {
                page: Pagingbar.getPageNum(),
                num : Pagingbar.getPageSize()
            }, function(rs){
                var list = renderList(rs.data.data.list);
                if(list !== ""){
                    $('#homeList').children().remove();
                    $('#homeList').html(list);
                }
            },'json')
        }else{
            $('#common-pagingbar-goto').focus();
        }
    }
    // Init paging
    Pagingbar.init({
        page_size:  parseInt($('#common-pagingbar-page_size').val()),
        page_num:   parseInt($('#common-pagingbar-page_num').val()),
        total_page_num: parseInt($('#common-pagingbar-total_page_num').val()),
        country: $('#country').val()
    });
    /**
     * åˆ·æ–°åˆ—è¡¨
     */
    var tplListData = require('page/app/distance/distance.list.data.js');

    function renderList(data){
        if(!data || data.length === 0){
            IVYAlert('No data');
            return "";
        }else{
            var html = "";
            var _idx = (Pagingbar.getPageNum() - 1) * Pagingbar.getPageSize() + 1;
            for(var i = 0, l = data.length;i < l;i++){
                html += tplListData.replace(/{index}/g, _idx + i)
                .replace(/{order}/g, data[i].order)
                .replace(/{main_order}/g, data[i].main_order)
                .replace(/{category}/g, disposeJSON(data[i].category))
                .replace(/{distance_min}/g, disposeJSON(data[i].distance_min))
                .replace(/{distance_max}/g, disposeJSON(data[i].distance_max))
                .replace(/{last_update}/g, data[i].last_update)
                .replace(/{id}/g, data[i].id)
            }
            return html;
        }

        function disposeJSON(data){
            var rs = "";
            for(var itm in data){
                rs += '<div>' + itm + ': ' + (data[itm] ? data[itm] : '') + '</div>';
            }
            return rs;
        }
    }

})
