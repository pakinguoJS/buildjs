
define(function (require, exports, module) {

	var $ = require('jquery');
	require('jquery-validate');
	require('jquery.form');
	var IVYAlert = require('ivy.alert');

	require('ipick.file-upload');

	// Upload TSV File
	$('.upload-btn').fileUpload({
		url: '/cms/index.php/upload/do_upload',
		file: {
			types: '*.tsv',
			typesDescription: 'TSV Files',
			sizeLimit: '10 MB',
		},
	}).on('uploadsuccess', function (event) {
		var data = $.parseJSON(event.body);
		if (data['ret']) {
			IVYAlert(data['msg']);
		} else {
			var form = $(this).parents('.upload-form').first();
			form.find('.file').val(data['data']['upload_path']);
			form.find('.filename').val('File Name: ' + data['data']['upload_path'].replace(/^.*\//, ''));
			IVYAlert('TSV file uploaded successfully');
			form.submit();
		}
	}).on('uploadstart', function (event) {
		IVYAlert('Uploading...', { toggle: true });
	}).on('error', function (event) {
		var message = {
			'QUEUE_ERROR.QUEUE_LIMIT_EXCEEDED': 'You can only upload one file at a time',
			'QUEUE_ERROR.ZERO_BYTE_FILE': 'The file is empty',
			'QUEUE_ERROR.FILE_EXCEEDS_SIZE_LIMIT': 'The file exceeded the maximum file size (2 MB)',
			'QUEUE_ERROR.INVALID_FILETYPE': 'The file format should be .tsv'
		}[event.error.type] || event.error.message;
		IVYAlert(message);
	});

	// Validation
	$('.upload-form').validate({
		errorPlacement: function (error, element) {
		}
	});

	// Ajax Submit
	$('.upload-form')
		.ajaxForm({
			beforeSubmit: function (data) {
				IVYAlert('Importing...', { toggle: true });
			},
			success: function (data, status, xhr, form) {
				var resultList = form.find('.upload-result');
				data = $.parseJSON(data);
				if (data['ret']) {
					IVYAlert('Import failed');
					var resultAlert = resultList.find('.samples').find('.alert.error').clone();
					resultAlert.find('.failed-time').html(data['data']['time']);
					resultList.append(resultAlert);
				} else {
					IVYAlert('Import completed');
					if (data['errorcode'] === 0) {
						var resultAlert = resultList.find('.samples').find('.alert.fully-completed').clone();
						resultAlert.find('.completed-time').html(data['data']['time']);
						resultAlert.find('.time-spent').html(parseFloat(data['data']['cost_time']).toFixed(3));
						resultAlert.find('.lines-total').html(data['data']['total_line']);
						resultAlert.find('.lines-imported').html(data['data']['succ_line']);
						resultAlert.find('.success-rate').html((data['data']['succ_line'] / data['data']['total_line'] * 100).toFixed(1) + '%');
						resultList.append(resultAlert);
					} else if (data['errorcode'] === 1) {
						var resultAlert = resultList.find('.samples').find('.alert.partially-completed-accepted').clone();
						resultAlert.find('.completed-time').html(data['data']['time']);
						resultAlert.find('.time-spent').html(parseFloat(data['data']['cost_time']).toFixed(3));
						resultAlert.find('.lines-total').html(data['data']['total_line']);
						resultAlert.find('.lines-imported').html(data['data']['succ_line']);
						resultAlert.find('.success-rate').html((data['data']['succ_line'] / data['data']['total_line'] * 100).toFixed(1) + '%');
						resultAlert.find('.lines-deformed').html(data['data']['warn_line']);
						if (!data['data']['warn_line']) resultAlert.find('.lines-deformed-message').addClass('hidden');
						resultAlert.find('.lines-failed').html(data['data']['total_line'] - data['data']['succ_line']);
						resultAlert.find('.token').html([data['data']['token']['city'], data['data']['token']['file_type'], data['data']['token']['id']].join('-').toUpperCase());
						resultList.append(resultAlert);
					} else if (data['errorcode'] === 2) {
						var resultAlert = resultList.find('.samples').find('.alert.partially-completed-rejected').clone();
						resultAlert.find('.completed-time').html(data['data']['time']);
						resultAlert.find('.time-spent').html(parseFloat(data['data']['cost_time']).toFixed(3));
						resultAlert.find('.lines-total').html(data['data']['total_line']);
						resultAlert.find('.lines-imported').html(data['data']['succ_line']);
						resultAlert.find('.success-rate').html((data['data']['succ_line'] / data['data']['total_line'] * 100).toFixed(1) + '%');
						resultAlert.find('.lines-deformed').html(data['data']['warn_line']);
						if (!data['data']['warn_line']) resultAlert.find('.lines-deformed-message').addClass('hidden');
						resultAlert.find('.lines-failed').html(data['data']['total_line'] - data['data']['succ_line']);
						resultAlert.find('.token').html([data['data']['token']['city'], data['data']['token']['file_type'], data['data']['token']['id']].join('-').toUpperCase());
						resultList.append(resultAlert);
					}
				}
			}
		});

});