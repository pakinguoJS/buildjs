/**
 * @author
 * @desc
 */
define(function(require, exports, module){
    require('ivy.alert.css');

    var $tpl = $(require('tpl.alert'));
    var i;  // Event id of setTimeout, 4 fade out of alert

    var config = {
        // Default duration, ms unit
        duration: 1500,
        // Default top
        top: 120,
        // Default used mask
        useMask: true,
        // Callback after fade out of alert
        callback: null
    }

    // alert main
    function ivyAlert(msg, options){
        // Alert msg
        $tpl.find('#ivyAlertMain').text(msg);

        // Show UI
        options ? null : options = {};
        ivyAlertShow(options);

        // Clear it while trggier again
        clearTimeout(i);

        // True to show alert without fading out and wait util next alert
        if(options.toggle){
            return;
        }

        // Default to fade out in 'duration' time
        i = setTimeout(function(){
            ivyAlertHide();
            typeof options == "function" ? options() : typeof options.callback == "function" ? options.callback() : null;
        }, typeof options == "number" ? options : options.duration ? options.duration : config.duration);

    }

    // Config
    ivyAlert.config = function(options){
        $.extend(config, options);
    }

    // Simple show
    function ivyAlertShow(options){
        $tpl.appendTo($('body'));
        setTimeout(function(){
            options.top ? $tpl.find('#ivyAlertMain').parent().css('top', options.top) : $tpl.find('#ivyAlertMain').parent().css('top', config.top);
            options.useMask ? $tpl.find('#ivyAlertMask').show() : config.useMask ? $tpl.find('#ivyAlertMask').show() : $tpl.find('#ivyAlertMask').hide();
            $tpl.fadeIn(200);
        },20);
    }

    // Simple hide
    function ivyAlertHide(){
        $tpl.fadeOut(100,function(){
            $tpl.detach();
        });
    }

    module.exports = ivyAlert;
})
