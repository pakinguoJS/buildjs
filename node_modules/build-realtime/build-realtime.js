var FS = require('fs');
var EXEC = require('child_process').exec;

// Load lib
var seajsConfig = require('alias-conf');
var synchronize = require('synchronize-files');
var htpl2js		= require('htpl2js');

// Load config
var CONFIG;
if(process.argv.length > 2){
	CONFIG = require(process.argv[2]);
}else{
	CONFIG = require('./CONFIG.json');
}

circle(function(){
	
	// 功能一：生成seajs.conf前端配置文件
	// 参数依次为：模板路径，生成文件路径，jsalias文件路径，cssalias文件路径，版本号
	seajsConfig(CONFIG.CONFSRC, CONFIG.CONFDEST,
				CONFIG.JSALIAS, CONFIG.CSSALIAS, 
				CONFIG.VERSION ? CONFIG.VERSION : new Date().getTime());
				
				
	// 功能二：同步文件
	synchronize.compareExclude(CONFIG.SYNCHROEXCLUDESRC, CONFIG.SYNCHROEXCLUDEDEST);
	synchronize.compareOnly(CONFIG.SYNCHROONLYSRC, CONFIG.SYNCHROONLYDEST);
	
	
	// 功能三：将指定文件类型，如.htpl转化为Seajs模块
	htpl2js(CONFIG.SYNCHROEXCLUDESRC, CONFIG.SYNCHROEXCLUDEDEST);
	
	
	// linux下需要更改文件夹权限和所在用户组
	EXEC('chown daemon:daemon -R ' + CONFIG.SYNCHROEXCLUDEDEST);
	EXEC('chown daemon:daemon -R ' + CONFIG.SYNCHROONLYDEST);
	EXEC('chmod -R 777 ' + CONFIG.SYNCHROEXCLUDEDEST);
	EXEC('chmod -R 777 ' + CONFIG.SYNCHROONLYDEST);
})

function circle(callback, delay, limit){
    if(typeof callback !== 'function'){
        return;
    }

    // exec per 2 seconds
    delay ? null : delay = 1500;

    // exec total time
    limit ? null : limit = 60000;

    var s = new Date().getTime();
	var e;
    var i = setInterval(function(){
        callback();
		e = new Date().getTime();
        if(e - s > limit){
            clearInterval(i);
            console.log('Total:' + (e-s));
        }
    }, delay)
}