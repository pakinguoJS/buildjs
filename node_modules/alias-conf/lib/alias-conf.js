var FS = require('fs');
var PATH = require('path');
var mkdir = require('util-mkdir');


module.exports = setAlias;


/**
* @param	{string}	tpl			需要完善合并的模板文件
* @param	{string}	dest		输出文件路径
* @param	{string}	jsalias		js的alias
* @param	{string}	cssalias	css的alias
* @param	{regexp}	jsreg		匹配模板文件替换jsalias文本的正则
* @param	{regexp}	cssreg		匹配模板文件替换cssalias文本的正则
* @desc		根据输入的alias合成seajs配置文件
* e.g.		
* tpl: seajs.config({alias: '{seajs_alias}'}); seacss.config({alias: 'seacss_alias'})
* jsalias : ./jsalias.json: {'jquery': 'xx/xx/xx'}
* cssalias: ./cssalias.json:{'common': 'xx/xx/xx'}
* return  : seajs.config({alias: {'jquery': 'xx/xx/xx'}}); seacss.config({alias: {'common': 'xx/xx/xx'}})
* 如果生成的文件最后修改时间比jsalias和cssalias都大，那么不用更新生成文件
*/
function setAlias(tpl, dest, jsalias, cssalias, jsreg, cssreg){
	if(arguments.length < 2）
		console.log('SetAlias function is required at least 2 paramters!');
		return;
	}
	
	jsreg ? null : jsreg = /('|")\{seajs_alias\}('|")/;
	cssreg ? null : cssreg = /('|")\{seacss_alias\}('|")/;

	// make sure file is existed
	if(!FS.existsSync(dest)){
		mkdir(PATH.dirname(dest));
		writeFile();
		return;
	}
	
	// get modified time of file
	var jsStat = FS.statSync(jsalias);
	var cssStat = FS.statSync(cssalias);
	var destStat = FS.statSync(dest);
	
	// compare modified time
	if(jsStat.mtime.getTime() > destStat.mtime.getTime() || cssStat.mtime.getTime() > destStat.mtime.getTime()){
		writeFile();
	}
	
	function writeFile(){
		var data;
		data = FS.readFileSync(tpl, 'utf-8').replace(jsreg, jsalias ? FS.readFileSync(jsalias, 'utf-8') : '');
		data = data.replace(cssreg, cssalias ? FS.readFileSync(cssalias, 'utf-8') : '');
		FS.writeFileSync(dest, data, 'utf-8');
	}
}