var FS = require('fs');
var PATH = require('path');


module.exports = {
	getModules: getModules
};


function getModules(src, reg){
	var output = {};
	reg ? null : reg = /\.tpl$|\.js$/;
	
	var _MATCH_USE_ARRAY = /seajs\.use(\s)*\((\s)*\[[a-zA-Z0-9._\-'"&/,\s]+\](\s)*(,(\s)*function(\s)*\(|\))/g;
	var _MATCH_USE_STR = /seajs\.use(\s)*\(('[a-zA-Z0-9._\-&/,\s]+'|"[a-zA-Z0-9._\-&/,\s]+")\)/g;
	var _MATCH_REQUIRE = /a/;
	var _MATCH_REQUIREASYNC_ARRAY = /a/;
	var _MATCH_REQUIREASYNC_STR = /a/;
	var _MOD_USE_ARRAY = /\[[a-zA-Z0-9._\-'"&/,\s]+\]/;
	var _MOD_USE_STR = /'[a-zA-Z0-9._\-&/,\s]+'|"[a-zA-Z0-9._\-&/,\s]+"/;
	
	if(src instanceof Array){
		src.forEach(function(path){
			_inner(path);
		})
	}else{
		_inner(src);
	}
	
	
	function _inner(path){
		var ll = FS.readdirSync(path);
		ll.forEach(function(file){
			var filepath = PATH.join(path, file);
			if(FS.statSync(filepath).isDirectory()){
				_inner(filepath);
			}else{
				dispose(filepath);
			}
		});
	}
	
	
	function dispose(path){
		if(reg.test(PATH.extname(path))){
			var content = FS.readFileSync(path, 'utf-8');
			
			// match array
			var used = content.match(_MATCH_USE_ARRAY);
			if(used){
				used.forEach(function(item){
					var mods = eval(item.match(_MOD_USE_ARRAY)[0]);
					mods.forEach(function(m){
						output[m] = 1;
					});
				});
			}
			
			// match str
			used = content.match(_MATCH_USE_STR);
			if(used){
				used.forEach(function(item){
					var mods = eval(item.match(_MOD_USE_STR)[0]);
					output[mods] = 1;
				});
			}
		}
	}
	
	
	return output;
}


function getDependencies(src, alias, ignore){
	var output = {};
	
}