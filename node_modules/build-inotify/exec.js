var FS      = require('fs');
var PATH    = require('path');
var EXEC    = require('child_process').exec;

// Load lib
var seajsConfig = require('alias-conf');
var synchronize = require('synchronize-files');
var htpl2js		= require('htpl2js');

// arguments: 0: node cmd, 1: src, 2: config path, 3: changed src dir, 4: changed file, 5: changed file event
var argv = process.argv;

// load config
var CONFIG;
try{
    CONFIG = require(argv[2]);
}catch(e){
    CONFIG = require('./CONFIG.json');
}

// regexp
var _JSON   = /\.(json|JSON)$/
var _HTPL   = /\.htpl$/;
var _TPL    = /\.tpl$/;
var _ATPL   = /\.(htpl|tpl)$/;

// 功能一：生成seajs.conf前端配置文件
// 参数依次为：模板路径，生成文件路径，jsalias文件路径，cssalias文件路径，版本号
_JSON.test(argv[4]) ? seajsConfig(CONFIG.CONFSRC, CONFIG.CONFDEST, CONFIG.JSALIAS, CONFIG.CSSALIAS, CONFIG.VERSION ? CONFIG.VERSION : new Date().getTime()) : null;

// 功能二：同步文件
!_ATPL.test(argv[4]) ? synchronize.compareExcludeRsync(CONFIG.SYNCHROEXCLUDESRC, CONFIG.SYNCHROEXCLUDEDEST) : null;
_TPL.test(argv[4]) ? synchronize.compareOnly(CONFIG.SYNCHROONLYSRC, CONFIG.SYNCHROONLYDEST) : null;

// 功能三：将指定文件类型，如.htpl转化为Seajs模块
_HTPL.test(argv[4]) ? htpl2js(CONFIG.SYNCHROEXCLUDESRC, CONFIG.SYNCHROEXCLUDEDEST) : null;

// linux下需要更改文件夹权限和所在用户组
EXEC('chown daemon:daemon -R ' + CONFIG.SYNCHROEXCLUDEDEST);
EXEC('chown daemon:daemon -R ' + CONFIG.SYNCHROONLYDEST);
EXEC('chmod -R 777 ' + CONFIG.SYNCHROEXCLUDEDEST);
EXEC('chmod -R 777 ' + CONFIG.SYNCHROONLYDEST);